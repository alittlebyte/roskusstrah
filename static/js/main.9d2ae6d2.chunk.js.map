{"version":3,"sources":["store/store.js","components/Selector.js","components/App.js","index.js"],"names":["initState","repos","store","createStore","state","action","type","payload","applyMiddleware","thunk","Selector","className","id","this","props","onChange","children","Component","Option","value","lang","App","dataToState","e","target","setState","handleRepos","preventDefault","listRepos","repo","progLang","stars","console","log","onSubmit","placeholder","map","language","items","key","name","description","stargazers_count","connect","usr","dispatch","axios","get","then","res","data","render","document","getElementById"],"mappings":"4PAUMA,EAAY,CACjBC,MAAO,IAkCOC,EALDC,aAjBM,WAAgC,IAA/BC,EAA8B,uDAAtBJ,EAAWK,EAAW,uCAClD,OAAOA,EAAOC,MACb,IAAK,aACJ,MAAO,CACNL,MAAOI,EAAOE,SAEhB,QACC,OAAOH,KAYTI,YAAgBC,MCxCIC,E,uKAEnB,OACC,4BAAQC,UAAU,WAAWC,GAAIC,KAAKC,MAAMF,GAAIG,SAAUF,KAAKC,MAAMC,UACnEF,KAAKC,MAAME,c,GAJsBC,aAUtCP,EAASQ,OAAT,uKAEE,OACC,4BAAQC,MAAON,KAAKC,MAAMM,MAAOP,KAAKC,MAAMM,UAH/C,GAAuCH,a,ICPjCI,E,kDACL,WAAYP,GAAO,IAAD,8BACjB,cAAMA,IASPQ,YAAc,SAAAC,GACVA,EAAEC,OAAOZ,MAAM,EAAKR,OACtB,EAAKqB,SAAL,eAAiBF,EAAEC,OAAOZ,GAAKW,EAAEC,OAAOL,SAZxB,EAelBO,YAAc,SAAAH,GACbA,EAAEI,iBACF,EAAKb,MAAMc,UAAU,EAAKxB,QAd1B,EAAKA,MAAM,CACVyB,KAAK,cACLC,SAAS,GACTC,MAAM,IANU,E,gEAqBjBlB,KAAKC,MAAMc,UAAUf,KAAKT,OAC1BS,KAAKY,SAAS,CAACI,KAAK,O,+BAIpBG,QAAQC,IAAIpB,KAAKT,OAEjB,OACC,6BACC,0BAAMO,UAAU,aAAauB,SAAUrB,KAAKa,aAC3C,2BAAOS,YAAY,gJAA6BvB,GAAG,OAAON,KAAK,OAAOS,SAAUF,KAAKS,cACrF,2BAAOhB,KAAK,SAASa,MAAM,wDAE5B,kBAAC,EAAD,CAAUP,GAAI,WAAYG,SAAUF,KAAKS,aAP3B,CAAC,OAAO,aAAa,SAAS,MAAM,KAAK,OAAO,MAAM,UAAU,OAAO,SAAS,QAAQ,UAAU,SAQpGc,KAAI,SAAAC,GACd,OACC,kBAAC,EAASnB,OAAV,CAAiBE,KAAMiB,QAI1B,6BACC,qMACA,+BACC,+BACGxB,KAAKC,MAAMb,MAAMqC,MAEmB,IAApCzB,KAAKC,MAAMb,MAAX,YACC,4BAAI,yPACJY,KAAKC,MAAMb,MAAMqC,MAAMF,KAAI,SAAAP,GAC3B,OACC,wBAAIU,IAAKV,EAAKjB,IACb,4BAAKiB,EAAKW,MACV,4BAAKX,EAAKY,aACV,4BAAKZ,EAAKQ,UACV,4BAAKR,EAAKa,sBATb,4BAAI,mJ,GA/CKzB,aAyEH0B,eAJS,SAAAvC,GAAK,MAAK,CACjCH,MAAOG,EAAMH,SAGyB,CAAC2B,UF3Cf,SAAAgB,GAAG,OAAI,SAAAC,GAC/B,OA/BmBzC,EA+BDwC,EA9BXE,IAAMC,IAAN,uDAA0D3C,EAAMyB,KAAN,UAAczB,EAAMyB,KAApB,YAAmC,IAA7F,OAAkGzB,EAAM0B,SAAN,oBAA4B1B,EAAM0B,UAAW,IAA/I,OAAoJ1B,EAAM2B,MAAN,gBAAqB3B,EAAM2B,OAAQ,MA8BvKiB,MAAK,SAAAC,GAAG,OAAIJ,EApB5B,CACNvC,KAAM,aACNC,QAkBqD0C,EAAIC,UA/BxC,IAAC9C,KEyELuC,CAAqCtB,GCxEpD8B,iBACC,kBAAC,IAAD,CAAUjD,MAAOA,GAChB,kBAAC,EAAD,OAEDkD,SAASC,eAAe,W","file":"static/js/main.9d2ae6d2.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\n\r\n//DB request\r\nconst fetchRepos = (state) => {\r\n\treturn axios.get(`https://api.github.com/search/repositories?q=${state.repo?`${state.repo} in:name`:''}${state.progLang?`+language:${state.progLang}`:''}${state.stars?`stars:${state.stars}`:''}`)\r\n}\r\n\r\n//initial state\r\nconst initState = {\r\n\trepos: []\r\n}\r\n\r\n//actions\r\nconst loadRepos = request => {\r\n\treturn {\r\n\t\ttype: 'LOAD_REPOS',\r\n\t\tpayload:request\r\n\t}\r\n}\r\n\r\n//reducers\r\nconst reduceRepos = (state = initState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_REPOS':\r\n\t\t\treturn {\r\n\t\t\t\trepos: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n//action creators\r\nexport const listRepos = usr => dispatch => {\r\n\treturn fetchRepos(usr).then(res => dispatch(loadRepos(res.data)))\r\n}\r\n\r\n//store\r\nconst store = createStore(\r\n\treduceRepos, \r\n\tapplyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nexport default class Selector extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<select className=\"selector\" id={this.props.id} onChange={this.props.onChange}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nSelector.Option = class Option extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<option value={this.props.lang}>{this.props.lang}</option>\r\n\t\t)\r\n\t}\r\n}","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { listRepos } from '../store/store.js'\nimport Selector from './Selector'\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state={\n\t\t\trepo:'alittlebyte',\n\t\t\tprogLang:'',\n\t\t\tstars:''\n\t\t}\n\t}\n\n\tdataToState = e => {\n\t\tif(e.target.id in this.state)\n\t\t\tthis.setState({ [e.target.id]: e.target.value })\n\t}\n\n\thandleRepos = e => {\n\t\te.preventDefault()\n\t\tthis.props.listRepos(this.state)\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.listRepos(this.state)\n\t\tthis.setState({repo:''})\n\t}\n\n\trender (){\n\t\tconsole.log(this.state)\n\t\tlet languages = ['none','JavaScript','Python','C++','C#','Java','PHP','Clojure','Ruby','Erlang','Scala','Haskell','Swift']\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form className='search-bar' onSubmit={this.handleRepos}>\n\t\t\t\t\t<input placeholder=\"Поиск по имени репозитория\" id=\"repo\" type=\"text\" onChange={this.dataToState}/>\n\t\t\t\t\t<input type=\"submit\" value=\"Найти это!\"/>\n\t\t\t\t</form>\n\t\t\t\t<Selector id={\"progLang\"} onChange={this.dataToState}>\n\t\t\t\t\t{languages.map(language => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Selector.Option lang={language}/> \n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Selector>\n\t\t\t\t<div>\n\t\t\t\t\t<h4>Список доступных репозиториев:</h4>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{!this.props.repos.items\n\t\t\t\t\t\t\t\t?<tr><td>Список загружается...</td></tr>\n\t\t\t\t\t\t\t\t:this.props.repos['total_count'] === 0\n\t\t\t\t\t\t\t\t\t?<tr><td>По заданным параметрам ничего не найдено!</td></tr>\n\t\t\t\t\t\t\t\t\t:this.props.repos.items.map(repo => {\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<tr key={repo.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{repo.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{repo.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{repo.language}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{repo.stargazers_count}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\t\t\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\trepos: state.repos\n})\n\nexport default connect(mapStateToProps,{listRepos})(App)","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store/store.js';\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}