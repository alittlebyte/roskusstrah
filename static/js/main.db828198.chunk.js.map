{"version":3,"sources":["store/store.js","components/Selector.js","components/App.js","index.js"],"names":["initState","repos","store","createStore","state","action","type","payload","applyMiddleware","thunk","Selector","this","props","name","id","onChange","children","Component","Option","value","lang","App","dataToState","e","target","setState","handleRepos","preventDefault","listRepos","repo","progLang","stars","languages","onSubmit","placeholder","map","language","key","indexOf","star","items","description","stargazers_count","connect","usr","dispatch","axios","get","then","res","data","render","document","getElementById"],"mappings":"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","file":"static/js/main.db828198.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport axios from 'axios'\r\n\r\n//DB request\r\nconst fetchRepos = (state) => {\r\n\treturn axios.get(`https://api.github.com/search/repositories?q=${state.repo?`${state.repo} in:name`:''}${state.progLang?`+language:${state.progLang}`:''}${state.stars?`+stars:>=${state.stars}`:''}`)\r\n}\r\n\r\n//initial state\r\nconst initState = {\r\n\trepos: []\r\n}\r\n\r\n//actions\r\nconst loadRepos = request => {\r\n\treturn {\r\n\t\ttype: 'LOAD_REPOS',\r\n\t\tpayload:request\r\n\t}\r\n}\r\n\r\n//reducers\r\nconst reduceRepos = (state = initState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_REPOS':\r\n\t\t\treturn {\r\n\t\t\t\trepos: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n//action creators\r\nexport const listRepos = usr => dispatch => {\r\n\treturn fetchRepos(usr).then(res => dispatch(loadRepos(res.data)))\r\n}\r\n\r\n//store\r\nconst store = createStore(\r\n\treduceRepos, \r\n\tapplyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport '../styles/Selector.css'\r\n\r\nexport default class Selector extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<label>{this.props.name}<select id={this.props.id} onChange={this.props.onChange}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</select></label>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nSelector.Option = class Option extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<option value={this.props.lang}>{this.props.lang}</option>\r\n\t\t)\r\n\t}\r\n}","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { listRepos } from '../store/store.js'\nimport Selector from './Selector'\nimport '../styles/App.css'\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state={\n\t\t\trepo:'octocat',\n\t\t\tprogLang:'',\n\t\t\tstars:''\n\t\t}\n\t}\n\n\tdataToState = e => {\n\t\tif(e.target.id in this.state)\n\t\t\tthis.setState({ [e.target.id]: e.target.value })\n\t}\n\n\thandleRepos = e => {\n\t\te.preventDefault()\n\t\tthis.props.listRepos(this.state)\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.listRepos(this.state)\n\t}\n\n\trender (){\n\t\tlet languages = ['none','Shell','HTML','CSS','JavaScript','Python','C','C++','C#','Java','PHP','Clojure','Ruby','Erlang','Scala','Haskell','Swift']\n\t\tlet stars = [0,10,25,50,100,200,500,1000,2500,5000,10000]\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<nav>\n\t\t\t\t\t<form onSubmit={this.handleRepos}>\n\t\t\t\t\t\t<label>Поиск<input placeholder=\"Поиск по имени/репозиторию\" id=\"repo\" type=\"text\" onChange={this.dataToState}/></label>\t\n\t\t\t\t\t\t<Selector id={\"progLang\"} name={\"Язык\"} onChange={this.dataToState}>\n\t\t\t\t\t\t\t{languages.map(language => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<Selector.Option key={languages.indexOf(language)} lang={language}/> \n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Selector>\n\t\t\t\t\t\t<Selector id={\"stars\"} name=\"Кол-во звёзд\" onChange={this.dataToState}>\n\t\t\t\t\t\t\t{stars.map(star => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<Selector.Option key={stars.indexOf(star)} lang={star}/> \n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Selector>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Найти это!\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</nav>\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{!this.props.repos.items\n\t\t\t\t\t\t\t?<tr><td>Список загружается...</td></tr>\n\t\t\t\t\t\t\t:this.props.repos['total_count'] === 0\n\t\t\t\t\t\t\t\t?<tr><td>По заданным параметрам ничего не найдено!</td></tr>\n\t\t\t\t\t\t\t\t:this.props.repos.items.map(repo => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<tr key={repo.id}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{repo.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{repo.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{repo.language}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td><span>☆</span>{repo.stargazers_count}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\trepos: state.repos\n})\n\nexport default connect(mapStateToProps,{listRepos})(App)","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store/store.js';\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}